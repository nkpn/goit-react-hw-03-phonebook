{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/SubmitForm/SubmitForm.module.css","helpers/Toast.js","components/Container/Container.js","components/SubmitForm/SubmitForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","helpers/localStorage.js","index.js"],"names":["module","exports","notify","name","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Container","children","className","SubmitForm","state","number","id","uniqeID","shortid","handleInputChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","s","Div","Form","Label","htmlFor","type","Input","pattern","title","required","onChange","Button","Component","ContactList","contacts","deleteContact","style","Contacts__container","Contact__list","map","contact","Contact__item","onClick","Filter","LabelText","propType","PropTypes","string","isRequired","func","App","filter","AddContactOnSubmit","data","find","toLowerCase","prevState","onFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","contactsPars","JSON","parse","prevProps","key","setItem","stringify","Error","saveToLS","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,oBAAsB,yCAAyC,cAAgB,mCAAmC,cAAgB,qC,mBCApJD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,UAAY,0BAA0B,MAAQ,wB,uCCA9FD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,4B,mJCajHC,G,MAXA,SAAAC,GAAI,OACjBC,IAAMC,MAAN,UAAeF,EAAf,4BAA+C,CAC7CG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,M,eCDCC,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAU,YAAf,SAA4BD,K,yCCoEjDE,E,4MAnEbC,MAAQ,CAAEf,KAAM,GAAIgB,OAAQ,GAAIC,GAAI,I,EAEpCC,QAAUC,M,EAEVC,kBAAoB,SAAAC,GAAU,IAAD,EAC3B,EAA4BA,EAAMC,OAA1BtB,EAAR,EAAQA,KAAMuB,EAAd,EAAcA,MAAON,EAArB,EAAqBA,GACrB,EAAKO,UAAL,mBAAiBxB,EAAOuB,GAAxB,mBAAmCN,GAAnC,K,EAGFQ,aAAe,SAAAJ,GACbA,EAAMK,iBAGN,EAAKC,MAAMC,SAAS,EAAKb,OAEzB,EAAKc,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAExB,KAAM,GAAIgB,OAAQ,GAAIC,GAAI,M,4CAG5C,WACE,MAAyBa,KAAKf,MAAtBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,OACNI,EAAsBU,KAAtBV,kBACR,OACE,mCACE,qBAAKP,UAAWkB,IAAEC,IAAlB,SACE,uBAAMnB,UAAWkB,IAAEE,KAAML,SAAUE,KAAKL,aAAxC,UACE,wBAAOZ,UAAWkB,IAAEG,MAAOC,QAASL,KAAKZ,QAAzC,iBAEE,uBACEkB,KAAK,OACLpC,KAAK,OACLa,UAAWkB,IAAEM,MACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRjB,MAAOvB,EACPyC,SAAUrB,EACVH,GAAIE,WAGR,wBAAON,UAAWkB,IAAEG,MAApB,mBAEE,uBACEE,KAAK,MACLvB,UAAWkB,IAAEM,MACbrC,KAAK,SACLsC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUrB,EACVG,MAAOP,EACPC,GAAIE,WAGR,wBAAQiB,KAAK,SAASvB,UAAWkB,IAAEW,OAAnC,wC,GA1DaC,a,iBCsCVC,EAtCK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC/B,OACE,qBAAKjC,UAAWkC,IAAMC,oBAAtB,SACE,oBAAInC,UAAWkC,IAAME,cAArB,SACGJ,EAASK,KAAI,SAAAC,GACZ,OACE,qBAAqBtC,UAAWkC,IAAMK,cAAtC,UACGD,EAAQnD,KADX,MACoBmD,EAAQnC,OAC1B,wBACEoB,KAAK,SACLiB,QAAS,WACPP,EAAcK,EAAQlC,KAH1B,sBAFOkC,EAAQlC,Y,kCCNvBqC,EAAS,SAAC,GAAyB,IAAvB/B,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SACvB,OACE,wBAAO5B,UAAWkC,IAAMb,MAAxB,UACE,mBAAGrB,UAAWkC,IAAMQ,UAApB,qBAA2C,IAC3C,uBACEnB,KAAK,OACLb,MAAOA,EAEPkB,SAAU,gBAAalB,EAAb,EAAGD,OAAUC,MAAb,OAA2BkB,EAASlB,IAC9CV,UAAWkC,IAAMV,YAMzBiB,EAAOE,SAAW,CAChBjC,MAAOkC,IAAUC,OAAOC,WACxBlB,SAAUgB,IAAUG,KAAKD,YAGZL,QC2EAO,E,4MArFb9C,MAAQ,CACN8B,SAAU,GACViB,OAAQ,I,EAGVC,mBAAqB,SAAAC,GAQjB,EAAKjD,MAAM8B,SAASoB,MAClB,SAAAd,GAAO,OAAIA,EAAQnD,KAAKkE,gBAAkBF,EAAKhE,KAAKkE,iBAGtDnE,EAAOiE,EAAKhE,MAQd,EAAKwB,UAAS,SAAA2C,GACZ,MAAO,CAAEtB,SAAS,GAAD,mBAAMsB,EAAUtB,UAAhB,CAA0BmB,S,EAI/ClB,cAAgB,SAAAkB,GACd,EAAKxC,UAAS,SAAA2C,GAAS,MAAK,CAC1BtB,SAAUsB,EAAUtB,SAASiB,QAAO,SAAAX,GAAO,OAAIA,EAAQlC,KAAO+C,U,EAIlEI,SAAW,SAAAN,GACT,EAAKtC,SAAS,CAAEsC,Y,EAGlBO,mBAAqB,WACnB,MAA6B,EAAKtD,MAA1B+C,EAAR,EAAQA,OAAQjB,EAAhB,EAAgBA,SACVyB,EAAmBR,EAAOI,cAEhC,OAAOrB,EAASiB,QAAO,qBAAG9D,KACnBkE,cAAcK,SAASD,O,uDAIhC,WAEE,IAAMzB,EAAW2B,aAAaC,QAAQ,YAChCC,EAAeC,KAAKC,MAAM/B,GAC5B6B,GACF5C,KAAKN,SAAS,CAAEqB,SAAU6B,M,gCAI9B,SAAmBG,EAAWV,GACxBrC,KAAKf,MAAM8B,WAAasB,EAAUtB,UCzElB,SAACiC,EAAKvD,GAC5B,IACEiD,aAAaO,QAAQD,EAAKH,KAAKK,UAAUzD,IACzC,MAAOrB,GACP,MAAM,IAAI+E,ODsERC,CAAS,WAAYpD,KAAKf,MAAM8B,Y,oBAKpC,WACE,MAA6Bf,KAAKf,MAA1B+C,EAAR,EAAQA,OACAhB,GADR,EAAgBD,SACwCf,KAAhDgB,eAAesB,EAAiCtC,KAAjCsC,SAAUL,EAAuBjC,KAAvBiC,mBAEjC,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAYnC,SAAUmC,IACtB,0CACA,cAAC,EAAD,CAAQxC,MAAOuC,EAAQrB,SAAU2B,IACjC,cAAC,EAAD,CACEvB,SAAUf,KAAKuC,qBACfvB,cAAeA,IAEjB,cAAC,IAAD,W,GAhFUH,a,MEPlBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0966eff8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__container\":\"ContactList_Contacts__container__3orHU\",\"Contact__list\":\"ContactList_Contact__list__3_NFF\",\"Contact__item\":\"ContactList_Contact__item__1h9jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__aZbnr\",\"LabelText\":\"Filter_LabelText__3P8FL\",\"Input\":\"Filter_Input__1AD6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"SubmitForm_Button__1Izwv\",\"Form\":\"SubmitForm_Form__TljLn\",\"Label\":\"SubmitForm_Label__ruTRt\",\"Input\":\"SubmitForm_Input__2ecB3\"};","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst notify = name =>\r\n  toast.error(`${name} is already in contacts!`, {\r\n    position: 'top-right',\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n\r\nexport default notify;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\r\nimport s from './SubmitForm.module.css';\r\nimport shortid from 'shortid';\r\n\r\nclass SubmitForm extends Component {\r\n  state = { name: '', number: '', id: '' };\r\n\r\n  uniqeID = shortid();\r\n\r\n  handleInputChange = event => {\r\n    const { name, value, id } = event.target;\r\n    this.setState({ [name]: value, id: id });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    //* Передаем в пропс чтоб прочитать в App\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '', id: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleInputChange } = this;\r\n    return (\r\n      <>\r\n        <div className={s.Div}>\r\n          <form className={s.Form} onSubmit={this.handleSubmit}>\r\n            <label className={s.Label} htmlFor={this.uniqeID}>\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className={s.Input}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                value={name}\r\n                onChange={handleInputChange}\r\n                id={shortid()}\r\n              />\r\n            </label>\r\n            <label className={s.Label}>\r\n              Number\r\n              <input\r\n                type=\"tel\"\r\n                className={s.Input}\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                onChange={handleInputChange}\r\n                value={number}\r\n                id={shortid()}\r\n              />\r\n            </label>\r\n            <button type=\"submit\" className={s.Button}>\r\n              Add to contacts\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitForm;\r\n","import React from 'react';\r\nimport style from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div className={style.Contacts__container}>\r\n      <ul className={style.Contact__list}>\r\n        {contacts.map(contact => {\r\n          return (\r\n            <li key={contact.id} className={style.Contact__item}>\r\n              {contact.name} : {contact.number}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  deleteContact(contact.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={style.Label}>\r\n      <p className={style.LabelText}>Filter:</p>{' '}\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        // onChange={onChange}\r\n        onChange={({ target: { value } }) => onChange(value)}\r\n        className={style.Input}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propType = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","//* Service\r\nimport React, { Component } from 'react';\r\nimport notify from 'helpers/Toast';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport '../index.css';\r\nimport { saveToLS } from 'helpers/localStorage';\r\nimport { getFromLS } from 'helpers/localStorage';\r\n//* Components\r\nimport Container from './Container';\r\nimport SubmitForm from './SubmitForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  AddContactOnSubmit = data => {\r\n    // const contact = {\r\n    //   name: data.name,\r\n    //   number: data.number,\r\n    //   id: data.id,\r\n    // };\r\n\r\n    if (\r\n      this.state.contacts.find(\r\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      notify(data.name);\r\n      return;\r\n    }\r\n\r\n    // this.setState(preventState => ({\r\n    //   contacts: [contact, ...preventState.contacts],\r\n    // }));\r\n\r\n    this.setState(prevState => {\r\n      return { contacts: [...prevState.contacts, data] };\r\n    });\r\n  };\r\n\r\n  deleteContact = data => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== data),\r\n    }));\r\n  };\r\n\r\n  onFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.setState({ contacts: getFromLS('contacts') });\r\n    const contacts = localStorage.getItem('contacts');\r\n    const contactsPars = JSON.parse(contacts);\r\n    if (contactsPars) {\r\n      this.setState({ contacts: contactsPars });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      saveToLS('contacts', this.state.contacts);\r\n      // localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const { deleteContact, onFilter, AddContactOnSubmit } = this;\r\n\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <SubmitForm onSubmit={AddContactOnSubmit} />\r\n        <h1>Contacts</h1>\r\n        <Filter value={filter} onChange={onFilter} />\r\n        <ContactList\r\n          contacts={this.getVisibleContacts()}\r\n          deleteContact={deleteContact}\r\n        />\r\n        <ToastContainer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export const saveToLS = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getFromLS = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (error) {\r\n    throw new Error();\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}